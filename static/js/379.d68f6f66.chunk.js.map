{"version":3,"file":"static/js/379.d68f6f66.chunk.js","mappings":"6IAoDA,IAAe,IAA0B,0D,uJChDnCA,EAAiB,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SACtBC,EAAaF,EAAMG,KAAI,YAAmC,IAAhCC,EAA+B,EAA/BA,GAAIC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC7C,OACE,SAAC,KAAD,CAAeC,GAAE,qBAAgBJ,GAAMK,MAAO,CAAEC,KAAMT,GAAtD,UACE,2BACE,gBAAKU,QAAQ,OAAOC,IAAKP,EAAOQ,IAAKP,KACrC,wBAAKA,KACL,uBAAIC,QAJGH,EAQhB,IAED,OACI,wBACKF,GAGZ,EAED,GAAeY,EAAAA,EAAAA,MAAKf,G,SCRpB,EAde,SAAC,GAAD,IAAGgB,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACX,4BACI,kBACAC,KAAK,OACLF,MAAOA,EACPC,SAAUA,EACVE,YAAY,uBAEZ,0BACI,gBAAKC,KAAMC,EAAAA,EAAS,gBATjB,ECKA,SAASC,IAAe,IAAD,EAClC,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOtB,EAAP,KAAcuB,EAAd,KAIMtB,GAAWuB,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAa,UAAGF,EAAaG,IAAI,eAApB,QAA+B,IAElDC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAe,mCAAG,0GAIPC,EAAT,SAAmBC,EAAGC,GAClB,OAAOD,EAAE3B,KAAK6B,cAAcD,EAAE5B,KACjC,EANe,UAGU8B,EAAAA,EAAAA,KAHV,gBAGRC,EAHQ,EAGRA,QAIFC,EAAgBD,EAAQE,KAAKP,GACnCT,EAASe,GARO,kDAYhBE,QAAQC,IAAR,MAZgB,sGAAH,qDAkBrBV,GACH,GAAE,IAEH,IAKMW,EAAoB1C,EAAM2C,QAAO,SAAAC,GAAI,OACvCA,EAAKtC,KAAKuC,cAAcC,SAASlB,EAAciB,cADR,IAI3C,OACI,iCACI,uBAGA,6BACI,SAAC,EAAD,CAAQ9B,MAAOa,EAAeZ,SAfrB,SAAC,GAAgB,IAC5B+B,EAD2B,EAAbC,OACMjC,MAC1BY,EAAgB,CAACrB,KAAMyC,GAC1B,KAaW,SAAC,EAAD,CAAgB/C,MAAO0C,EAAmBzC,SAAUA,SAInE,C,4GCxDKgD,E,OAAWC,EAAAA,OAAa,CAC1BC,QAAS,oCAGAf,EAAa,mCAAG,sGACFa,EAASpB,IAAI,cADX,uBACjBuB,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,qDAKbC,EAAmB,mCAAG,WAAMjD,GAAN,yFACR6C,EAASpB,IAAT,qBAA2BzB,IADnB,uBACvBgD,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qD","sources":["images/sprite.svg","components/CharactersList/CharactersList.jsx","components/Filter/Filter.jsx","pages/Characters.jsx","services/api.js"],"sourcesContent":["var _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSprite(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    style: {\n      position: \"absolute\",\n      width: 0,\n      height: 0,\n      overflow: \"hidden\"\n    },\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"search\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000\",\n    fillOpacity: 0.54,\n    d: \"M15.5 15h-.79l-.28-.27A6.471 6.471 0 0 0 16 10.5 6.5 6.5 0 1 0 9.5 17c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 20l-4.99-5Zm-6 0C7.01 15 5 12.99 5 10.5S7.01 6 9.5 6 14 8.01 14 10.5 11.99 15 9.5 15Z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"back\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 16 16\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000\",\n    d: \"M16 7H3.83l5.59-5.59L8 0 0 8l8 8 1.41-1.41L3.83 9H16V7Z\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSprite);\nexport default __webpack_public_path__ + \"static/media/sprite.35fb82e09a0700c9fb443d0f56b46074.svg\";\nexport { ForwardRef as ReactComponent };","import { memo } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n\nconst CharactersList = ({items, location}) => {\n    const characters = items.map(({ id, image, name, species }) => {\n        return (\n          <Link key={id} to={`/character/${id}`} state={{ from: location }}>\n            <li>\n              <img loading=\"lazy\" src={image} alt={name} />\n              <h3>{name}</h3>\n              <p>{species}</p>\n            </li>\n          </Link>\n        );\n    });\n\n    return (\n        <ul>\n            {characters}\n        </ul>\n    );\n};\n\nexport default memo(CharactersList);\n\nCharactersList.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.object).isRequired,\n  id: PropTypes.string,\n  image: PropTypes.string,\n  name: PropTypes.string,\n  species: PropTypes.string,\n};","import sprite from '../../images/sprite.svg';\n\nconst Filter = ({ value, onChange }) => (\n    <div>\n        <input\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n        placeholder=\"Filter by name...\"\n        />\n        <svg>\n            <use href={sprite + '#search'} />\n        </svg>\n    </div>\n);\n\nexport default Filter;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { getCharacters } from 'services/api';\nimport CharactersList from 'components/CharactersList';\nimport Filter from 'components/Filter';\n\n\nexport default function Characters () {\n    const [items, setItems] = useState([]);\n    // const [loading, setLoading] = useState(false);\n    // const [error, setError] = useState('');\n\n    const location = useLocation();\n    const [searchParams, setSearchParams] = useSearchParams();\n    const characterName = searchParams.get('name') ?? '';\n\n    useEffect(() => {\n        const fetchCharacters = async () => {\n            try {\n                // setLoading(true);\n                const { results } = await getCharacters();\n                function sortArray(a, b) {\n                    return a.name.localeCompare(b.name);\n                }\n                const sortedResults = results.sort(sortArray);\n                setItems(sortedResults);\n            }\n            catch (error) {\n                // setError(error.message);\n                console.log(error);\n            }\n            finally {\n                // setLoading(false);\n            }\n        }\n        fetchCharacters();\n    }, []);\n\n    const handleFilter = ({ target }) => {\n        const nextParams = target.value;\n        setSearchParams({name: nextParams});\n    }\n\n    const visibleCharacters = items.filter(item =>\n        item.name.toLowerCase().includes(characterName.toLowerCase())\n    );\n\n    return (\n        <>\n            <header>\n                \n            </header>\n            <main>\n                <Filter value={characterName} onChange={handleFilter} />\n                <CharactersList items={visibleCharacters} location={location} />\n            </main>\n      </>\n    );\n}","import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: 'https://rickandmortyapi.com/api',\n});\n\nexport const getCharacters = async () => {\n    const { data } = await instance.get('/character');  \n    return data;\n}\n\nexport const getCharacterDetails = async id => {\n    const { data } = await instance.get(`/character/${id}`);  \n    return data;\n}"],"names":["CharactersList","items","location","characters","map","id","image","name","species","to","state","from","loading","src","alt","memo","value","onChange","type","placeholder","href","sprite","Characters","useState","setItems","useLocation","useSearchParams","searchParams","setSearchParams","characterName","get","useEffect","fetchCharacters","sortArray","a","b","localeCompare","getCharacters","results","sortedResults","sort","console","log","visibleCharacters","filter","item","toLowerCase","includes","nextParams","target","instance","axios","baseURL","data","getCharacterDetails"],"sourceRoot":""}